version: '1.0'

services:

  postgres:
    image: postgres:16.4
    container_name: t1_java_demo
    shm_size: 128mb
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgresql_secret_password
      APP_USER: appUser
      APP_PASSWORD: appUserPassword
      APP_DB: t1_demo
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - "./config/postgresql/init_app_db.sh:/docker-entrypoint-initdb.d/init_app_db.sh"

    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname=t1_demo --username=postgres"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 90s

  zookeeper_t1:
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper_t1
    container_name: zookeeper_t1
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
  broker_t1:
    image: confluentinc/cp-kafka:5.5.0
    hostname: broker_t1
    container_name: broker_t1
    depends_on:
      - zookeeper_t1
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper_t1:2182'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker_t1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

volumes:
  postgresql-data:
    name: t1-demo-postgresql-data